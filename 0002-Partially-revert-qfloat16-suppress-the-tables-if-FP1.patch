From 4e7361c8b547bcb7f95f07e65f63ee66e06aa627 Mon Sep 17 00:00:00 2001
From: Thiago Macieira <thiago.macieira@intel.com>
Date: Tue, 13 Aug 2019 20:33:11 -0700
Subject: [PATCH] Partially revert "qfloat16: suppress the tables if FP16 is
 supported by the CPU"

This reverts the x86 F16 part of commit
9649c41ed950eaa7dd9d3cb6d37a05d3a9ed8a3e. Unfortunately, it is perfectly
valid to compile coe without F16C an link to a QtCore that was compiled
with it. That's the case in Clear Linux where there's
/usr/lib64/libQt5Core.so.5 and /usr/lib4/haswell/libQt5Core.so.5.

Change-Id: I907a43cd9a714da288a2fffd15baacace8331403
---
 src/tools/qfloat16-tables/gen_qfloat16_tables.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/tools/qfloat16-tables/gen_qfloat16_tables.cpp b/src/tools/qfloat16-tables/gen_qfloat16_tables.cpp
index 17fc978039..6f0997bc25 100644
--- a/src/tools/qfloat16-tables/gen_qfloat16_tables.cpp
+++ b/src/tools/qfloat16-tables/gen_qfloat16_tables.cpp
@@ -79,7 +79,7 @@ qint32 main(qint32 argc, char **argv)
     fid.write("#include <QtCore/qfloat16.h>\n\n");
 
     fid.write("QT_BEGIN_NAMESPACE\n\n");
-    fid.write("#if !defined(__F16C__) && !defined(__ARM_FP16_FORMAT_IEEE)\n\n");
+    fid.write("#if !defined(__ARM_FP16_FORMAT_IEEE)\n\n");
 
     fid.write("const quint32 qfloat16::mantissatable[2048] = {\n");
     fid.write("0,\n");
@@ -156,7 +156,7 @@ qint32 main(qint32 argc, char **argv)
 
     fid.write("};\n\n");
 
-    fid.write("#endif // !__F16C__ && !__ARM_FP16_FORMAT_IEEE\n\n");
+    fid.write("#endif // !__ARM_FP16_FORMAT_IEEE\n\n");
     fid.write("QT_END_NAMESPACE\n");
     fid.close();
     return 0;
-- 
2.23.0

